version: 2.1

orbs:
  node: circleci/node@5.3.0
  aws-cli: circleci/aws-cli@5.1.0
  aws-ecr: circleci/aws-ecr@9.3.1
  aws-eks: circleci/aws-eks@2.2.0

jobs:
  e2e_test:
    docker:
      - image: mcr.microsoft.com/playwright:v1.39.0-focal
    steps:
      - checkout
      - node/install-packages
      - run: | 
          TESTFILES=$(circleci tests glob "e2e/*.spec.ts")
          echo $TESTFILES | circleci tests run --command="xargs npx playwright test" --verbose
      - store_test_results:
          path: results.xml

  e2e_test_parallel:
    parallelism: 10 # Parallelism
    docker:
      - image: mcr.microsoft.com/playwright:v1.39.0-focal
    steps:
      - checkout
      - node/install-packages
      - run: | 
          TESTFILES=$(circleci tests glob "e2e/*.spec.ts")
          echo $TESTFILES | circleci tests run --command="xargs npx playwright test" --verbose --split-by=timings
      - store_test_results:
          path: results.xml

  build_and_push_ecr:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - aws-ecr/build_and_push_image:
          auth:
            - aws-cli/setup:
                role_arn: ${AWS_ROLE_ARN}
          repo: tadashi-demo-release-eks-app
          tag: '${CIRCLE_SHA1}'

  deploy_eks:
    docker:
      - image: cimg/aws:2024.03.1
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: ${AWS_ROLE_ARN}
      - aws-eks/update-kubeconfig-with-authenticator:
          install-aws-cli: false
          aws-region: ap-northeast-1
          cluster-name: tadashi-cci-demo-release
      - run:
          name: Apply Kubernetes Manifest to EKS
          command: |
            export CIRCLE_SHA1_SHORT=${CIRCLE_SHA1:0:8}
            envsubst < manifest/rollout.yaml | kubectl apply -f -

workflows:
  test_and_deploy: 
    jobs:
      - node/test:
          name: unit_test
          test-results-for: jest
      - e2e_test:
          requires:
            - unit_test
      - e2e_test_parallel:
          requires:
            - unit_test
      - build_and_push_ecr:
          context:
            - aws-oidc-fargate
          filters:
            branches:
              only:
                - main
      - deploy_eks:
          context:
            - aws-oidc-fargate
          requires:
            - build_and_push_ecr
